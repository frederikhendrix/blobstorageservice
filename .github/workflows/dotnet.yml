name: Build and Deploy Blob Storage Service

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Disable shallow clone to get a full clone for better analysis.

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies for Blob Storage Service
        run: dotnet restore ./BlobStorageService/BlobStorageService/BlobStorageService.csproj

      - name: Build Blob Storage Service
        run: dotnet build ./BlobStorageService/BlobStorageService/BlobStorageService.csproj --no-restore

      # ClamAV
      - name: Install ClamAV
        run: sudo apt-get install -y clamav

      - name: Update ClamAV database
        run: sudo freshclam
        continue-on-error: true

      - name: Scan project files with ClamAV
        run: clamscan -r ./BlobStorageService
        continue-on-error: true

      # Steps for building and pushing Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Blob Storage Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./BlobStorageService
          file: ./BlobStorageService/BlobStorageService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/blobstorageservice-backend:latest

      - name: Set up Azure CLI
        uses: azure/setup-kubectl@v1
        with:
          version: "latest"

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Create blob storage secret
        run: kubectl create secret generic blob-storage-secret --from-literal=connection-string=${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}

      - name: Create VirusTotal API key secret
        run: kubectl create secret generic virus-total-secret --from-literal=api-key=${{ secrets.VIRUSTOTAL_API_KEY }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml

      - name: Scan project files with ClamAV
        run: clamscan -r ./BlobStorageService
