name: Build and Deploy Blob Storage Service

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Disable shallow clone to get a full clone for better analysis.

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies for Blob Storage Service
        run: dotnet restore ./BlobStorageService/BlobStorageService/BlobStorageService.csproj

      - name: Build Blob Storage Service
        run: dotnet build ./BlobStorageService/BlobStorageService/BlobStorageService.csproj --no-restore

      # OWASP Dependency-Check for .NET
      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.4.4/dependency-check-7.4.4-release.zip
          unzip dependency-check-7.4.4-release.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency-Check
        run: dependency-check/bin/dependency-check.sh --project BlobStorageService --scan . --format ALL --out dependency-check-report

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: dependency-check-report

      # ClamAV
      - name: Install ClamAV
        run: sudo apt-get install -y clamav

      - name: Update ClamAV database
        run: sudo freshclam

      - name: Scan project files with ClamAV
        run: clamscan -r ./BlobStorageService

      # Steps for building and pushing Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Blob Storage Service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./BlobStorageService
          file: ./BlobStorageService/BlobStorageService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/blobstorageservice-backend:latest

      - name: Set up Azure CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.4.4/dependency-check-7.4.4-release.zip
          unzip dependency-check-7.4.4-release.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency-Check
        run: dependency-check/bin/dependency-check.sh --project BlobStorageService --scan . --format ALL --out dependency-check-report

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Install ClamAV
        run: sudo apt-get install -y clamav

      - name: Update ClamAV database
        run: sudo freshclam

      - name: Run AzCopy to download files from Blob Storage
        run: |
          curl -sL https://aka.ms/downloadazcopy-v10-linux | tar -xz
          sudo ./install.sh
          azcopy login --identity
          azcopy cp "https://${{ secrets.AZUR_STORAGE }}.blob.core.windows.net/${{ secrets.AZURE_CONTAINER }}/*" "./local-path/" --recursive

      - name: Scan downloaded files with ClamAV
        run: clamscan -r ./local-path

      - name: Run AzCopy to upload files to Blob Storage
        run: |
          azcopy login --identity
          azcopy cp "./local-path/*" "https://${{ secrets.AZUR_STORAGE }}.blob.core.windows.net/${{ secrets.AZURE_CONTAINER }}/" --recursive
